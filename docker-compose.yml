version: "3.9"

services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    command: python src/manage.py runserver 0.0.0.0:8000
    container_name: xtweb_main
    entrypoint: /app/entrypoint.sh
    volumes:
      - .:/app
    env_file:
      - ./.env
    # ports:
    #   - 80:8000
    depends_on:
      - redis
      - postgres
  postgres:
    container_name: xtweb_postgis
    image: postgis/postgis:17-master
    environment:
      - POSTGRES_DB=xtweb
      - POSTGRES_USER=xtweb
      - POSTGRES_PASSWORD=xtweb
    volumes:
      - ./docker/volumes/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U xtweb"]
      start_period: 10s
      interval: 60s
      timeout: 5s
      retries: 3
  redis:
    image: redis:latest
    container_name: xtweb_redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always
    tty: true
  angie:
    image: docker.angie.software/angie:latest
    container_name: xtweb_angie
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./var/htdocs:/usr/share/angie/html:ro
      - ./docker/angie/angie.conf:/etc/angie/angie.conf:ro
      - ./docker/angie/conf.d:/etc/angie/conf.d:ro
      - ./docker/volumes/angie/logs:/var/log/angie
    restart: always
    depends_on:
      - web    
  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: 
      - /bin/sh
      - -c
      - |
        celery --workdir=src -A project worker -E -l INFO -n worker --autoscale=10,2  --pool=gevent --concurrency=500 --max-tasks-per-child=1000
        celery --workdir=src -A project beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler
    container_name: xtweb_celery
    volumes:
      - .:/app
    env_file:
      - ./.env
    depends_on:
      - web
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: xtweb_frontend
    volumes:
      - ./frontend:/app
    ports:
       - 3000:3000
    stdin_open: true
    tty: true       
